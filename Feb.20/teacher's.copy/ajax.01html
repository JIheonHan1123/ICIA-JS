<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <title>Asynchronous(비동기)의 개념</title>
  </head>
  <body>
    <!-- 
      ajax는 프론트를 대표할 만큼 많이 사용되는 기능
      react.js나 vue.js와 프론트엔드 프레임워크는 ajax기능이 없다
      대신 axios라이브러리나 js fetch를 사용한다
      jQuery도 ajax기능을 제거한 slim버전을 제공한다

      ajax는 비동기로 실행
      동기(synchronous): A->B->C
      비동기: 동시에 실행된다
     -->

    <script>
      // Browser Object Model
      // ㄴ document, history, location

      // location 객체: 브라우저의 주소창
      // location.href = "http://www.naver.com"
      // location.reload(); = F5 (새로고침)

      // consol.log(location.search)
      // http://192.168.0.230:5500/Feb.20/teacher's.copy/aaa.html
      // get방식 요청에서 querystring을 읽어 오려면 location.search사용

      // const date = new Date();
      // const params = new URLSearchParams();
      // const form = new FormData();
      // 이렇게 js가 제공하는 new로 생성할 수 있는 객체: 내장객체 (우리는 위 3개 정도만 사용)
      // const params = new URLSearchParams(location.search);
      // console.log(params.get("irum"));
      // console.log(params.get("age"));

      $.ajax({
        url: "https://dog.ceo/api/breeds/image/random",
        method: "get",
        success: function () {
          // 서버에서 응답이 도착하면 실행한다
          // 성공했다는 의미는 "서버에서 오류가 발생하지 않았다" -> 200
          console.log("ajax 통신 성공");
        },
      });
      console.log("ajax 통신 끝");
    </script>
  </body>
</html>
